import 'package:flutter/material.dart';
import 'package:latlong2/latlong.dart';
import '../../../core/models/fund_transaction_model.dart';
import '../../../core/models/state_model.dart';
import '../../../core/models/agency_model.dart';
import '../presentation/widgets/fund_health_indicators.dart';
import '../presentation/widgets/fund_flow_drill_down_modal.dart';
import '../presentation/widgets/comparative_analytics_widget.dart';

/// Mock data provider for Fund Flow system testing and demonstration
class MockFundFlowData {
  // Indian states with capitals and coordinates
  static List<StateModel> getMockStates() {
    return [
      StateModel(
        id: 'state_1',
        name: 'Delhi',
        code: 'DL',
        capitalLocation: const LatLng(28.6139, 77.2090),
        districtIds: ['dist_1', 'dist_2'],
        nodalOfficer: 'Mr. Rajesh Kumar',
        nodalOfficerContact: '+91-11-23456789',
        fundUtilizationRate: 87.5,
        performanceScore: 92.3,
        totalProjects: 45,
        completedProjects: 32,
        isActive: true,
        metadata: {'population': '19000000', 'area': '1484'},
        createdAt: DateTime.now().subtract(const Duration(days: 365)),
        updatedAt: DateTime.now(),
      ),
      StateModel(
        id: 'state_2',
        name: 'Maharashtra',
        code: 'MH',
        capitalLocation: const LatLng(19.0760, 72.8777),
        districtIds: ['dist_3', 'dist_4', 'dist_5'],
        nodalOfficer: 'Dr. Priya Sharma',
        nodalOfficerContact: '+91-22-23456789',
        fundUtilizationRate: 82.3,
        performanceScore: 88.7,
        totalProjects: 78,
        completedProjects: 58,
        isActive: true,
        metadata: {'population': '112000000', 'area': '307713'},
        createdAt: DateTime.now().subtract(const Duration(days: 365)),
        updatedAt: DateTime.now(),
      ),
      StateModel(
        id: 'state_3',
        name: 'Karnataka',
        code: 'KA',
        capitalLocation: const LatLng(12.9716, 77.5946),
        districtIds: ['dist_6', 'dist_7'],
        nodalOfficer: 'Mr. Suresh Reddy',
        nodalOfficerContact: '+91-80-23456789',
        fundUtilizationRate: 79.8,
        performanceScore: 85.2,
        totalProjects: 56,
        completedProjects: 41,
        isActive: true,
        metadata: {'population': '61000000', 'area': '191791'},
        createdAt: DateTime.now().subtract(const Duration(days: 365)),
        updatedAt: DateTime.now(),
      ),
      StateModel(
        id: 'state_4',
        name: 'Uttar Pradesh',
        code: 'UP',
        capitalLocation: const LatLng(26.8467, 80.9462),
        districtIds: ['dist_8', 'dist_9', 'dist_10'],
        nodalOfficer: 'Ms. Anjali Verma',
        nodalOfficerContact: '+91-522-2345678',
        fundUtilizationRate: 72.5,
        performanceScore: 78.9,
        totalProjects: 92,
        completedProjects: 64,
        isActive: true,
        metadata: {'population': '199800000', 'area': '240928'},
        createdAt: DateTime.now().subtract(const Duration(days: 365)),
        updatedAt: DateTime.now(),
      ),
      StateModel(
        id: 'state_5',
        name: 'Tamil Nadu',
        code: 'TN',
        capitalLocation: const LatLng(13.0827, 80.2707),
        districtIds: ['dist_11', 'dist_12'],
        nodalOfficer: 'Dr. Murugan Swamy',
        nodalOfficerContact: '+91-44-23456789',
        fundUtilizationRate: 91.2,
        performanceScore: 94.5,
        totalProjects: 67,
        completedProjects: 59,
        isActive: true,
        metadata: {'population': '72100000', 'area': '130060'},
        createdAt: DateTime.now().subtract(const Duration(days: 365)),
        updatedAt: DateTime.now(),
      ),
    ];
  }

  // Mock agencies
  static List<AgencyModel> getMockAgencies() {
    return [
      AgencyModel(
        id: 'agency_1',
        name: 'Delhi Development Authority',
        type: AgencyType.implementingAgency,
        stateId: 'state_1',
        location: const LatLng(28.6139, 77.2090),
        address: 'Vikas Sadan, INA, New Delhi',
        contactPerson: 'Mr. Amit Singh',
        phone: '+91-11-24622600',
        email: 'dda@delhi.gov.in',
        capacityScore: 0.92,
        performanceRating: 0.88,
        isActive: true,
        metadata: {'established': '1957', 'staff': '1200'},
        createdAt: DateTime.now().subtract(const Duration(days: 300)),
        updatedAt: DateTime.now(),
      ),
      AgencyModel(
        id: 'agency_2',
        name: 'Mumbai Urban Development',
        type: AgencyType.implementingAgency,
        stateId: 'state_2',
        location: const LatLng(19.0760, 72.8777),
        address: 'BMC Building, Mahapalika Marg, Mumbai',
        contactPerson: 'Ms. Sneha Patil',
        phone: '+91-22-22694727',
        email: 'mud@maharashtra.gov.in',
        capacityScore: 0.88,
        performanceRating: 0.85,
        isActive: true,
        metadata: {'established': '1888', 'staff': '2500'},
        createdAt: DateTime.now().subtract(const Duration(days: 300)),
        updatedAt: DateTime.now(),
      ),
      AgencyModel(
        id: 'agency_3',
        name: 'Bangalore Development Agency',
        type: AgencyType.nodalAgency,
        stateId: 'state_3',
        location: const LatLng(12.9716, 77.5946),
        address: 'BDA Complex, Kumara Krupa Road, Bangalore',
        contactPerson: 'Mr. Karthik Rao',
        phone: '+91-80-22212520',
        email: 'bda@karnataka.gov.in',
        capacityScore: 0.86,
        performanceRating: 0.82,
        isActive: true,
        metadata: {'established': '1976', 'staff': '800'},
        createdAt: DateTime.now().subtract(const Duration(days: 300)),
        updatedAt: DateTime.now(),
      ),
    ];
  }

  // Mock fund transactions
  static List<FundTransaction> getMockTransactions() {
    final now = DateTime.now();
    return [
      // Centre to State transfers
      FundTransaction(
        id: 'tx_1',
        pfmsId: 'PFMS2024001',
        transactionDate: now.subtract(const Duration(days: 15)),
        stage: FundFlowStage.centreAllocation,
        status: TransactionStatus.completed,
        fromEntity: 'Ministry of Social Justice',
        fromEntityId: 'centre_1',
        fromEntityType: 'centre',
        toEntity: 'Delhi',
        toEntityId: 'state_1',
        toEntityType: 'state',
        amount: 50000000,
        component: SchemeComponent.adarshaGram,
        stateId: 'state_1',
        processedDate: now.subtract(const Duration(days: 13)),
        processingDays: 2,
        isDelayed: false,
        createdBy: 'system',
        createdAt: now.subtract(const Duration(days: 15)),
        updatedAt: now.subtract(const Duration(days: 13)),
      ),
      FundTransaction(
        id: 'tx_2',
        pfmsId: 'PFMS2024002',
        transactionDate: now.subtract(const Duration(days: 12)),
        stage: FundFlowStage.stateTransfer,
        status: TransactionStatus.completed,
        fromEntity: 'Delhi',
        fromEntityId: 'state_1',
        fromEntityType: 'state',
        toEntity: 'Delhi Development Authority',
        toEntityId: 'agency_1',
        toEntityType: 'agency',
        amount: 15000000,
        component: SchemeComponent.adarshaGram,
        stateId: 'state_1',
        agencyId: 'agency_1',
        processedDate: now.subtract(const Duration(days: 10)),
        processingDays: 2,
        isDelayed: false,
        createdBy: 'state_officer',
        createdAt: now.subtract(const Duration(days: 12)),
        updatedAt: now.subtract(const Duration(days: 10)),
      ),
      FundTransaction(
        id: 'tx_3',
        pfmsId: 'PFMS2024003',
        transactionDate: now.subtract(const Duration(days: 20)),
        stage: FundFlowStage.centreAllocation,
        status: TransactionStatus.completed,
        fromEntity: 'Ministry of Social Justice',
        fromEntityId: 'centre_1',
        fromEntityType: 'centre',
        toEntity: 'Maharashtra',
        toEntityId: 'state_2',
        toEntityType: 'state',
        amount: 75000000,
        component: SchemeComponent.hostel,
        stateId: 'state_2',
        processedDate: now.subtract(const Duration(days: 17)),
        processingDays: 3,
        isDelayed: false,
        createdBy: 'system',
        createdAt: now.subtract(const Duration(days: 20)),
        updatedAt: now.subtract(const Duration(days: 17)),
      ),
      FundTransaction(
        id: 'tx_4',
        pfmsId: 'PFMS2024004',
        transactionDate: now.subtract(const Duration(days: 16)),
        stage: FundFlowStage.stateTransfer,
        status: TransactionStatus.completed,
        fromEntity: 'Maharashtra',
        fromEntityId: 'state_2',
        fromEntityType: 'state',
        toEntity: 'Mumbai Urban Development',
        toEntityId: 'agency_2',
        toEntityType: 'agency',
        amount: 25000000,
        component: SchemeComponent.hostel,
        stateId: 'state_2',
        agencyId: 'agency_2',
        processedDate: now.subtract(const Duration(days: 12)),
        processingDays: 4,
        isDelayed: false,
        createdBy: 'state_officer',
        createdAt: now.subtract(const Duration(days: 16)),
        updatedAt: now.subtract(const Duration(days: 12)),
      ),
      FundTransaction(
        id: 'tx_5',
        pfmsId: 'PFMS2024005',
        transactionDate: now.subtract(const Duration(days: 8)),
        stage: FundFlowStage.agencyDisbursement,
        status: TransactionStatus.processing,
        fromEntity: 'Delhi Development Authority',
        fromEntityId: 'agency_1',
        fromEntityType: 'agency',
        toEntity: 'Adarsh Gram Project A',
        toEntityId: 'project_1',
        toEntityType: 'project',
        amount: 5000000,
        component: SchemeComponent.adarshaGram,
        stateId: 'state_1',
        agencyId: 'agency_1',
        projectId: 'project_1',
        processingDays: 0,
        isDelayed: false,
        createdBy: 'agency_officer',
        createdAt: now.subtract(const Duration(days: 8)),
        updatedAt: now.subtract(const Duration(days: 1)),
      ),
      FundTransaction(
        id: 'tx_6',
        pfmsId: 'PFMS2024006',
        transactionDate: now.subtract(const Duration(days: 25)),
        stage: FundFlowStage.centreAllocation,
        status: TransactionStatus.onHold,
        fromEntity: 'Ministry of Social Justice',
        fromEntityId: 'centre_1',
        fromEntityType: 'centre',
        toEntity: 'Karnataka',
        toEntityId: 'state_3',
        toEntityType: 'state',
        amount: 60000000,
        component: SchemeComponent.infrastructure,
        stateId: 'state_3',
        processingDays: 25,
        isDelayed: true,
        delayReason: 'Pending state approval',
        createdBy: 'system',
        createdAt: now.subtract(const Duration(days: 25)),
        updatedAt: now.subtract(const Duration(days: 1)),
      ),
      FundTransaction(
        id: 'tx_7',
        pfmsId: 'PFMS2024007',
        transactionDate: now.subtract(const Duration(days: 5)),
        stage: FundFlowStage.projectSpend,
        status: TransactionStatus.completed,
        fromEntity: 'Adarsh Gram Project A',
        fromEntityId: 'project_1',
        fromEntityType: 'project',
        toEntity: 'Direct Beneficiary Payment',
        toEntityId: 'beneficiary_group_1',
        toEntityType: 'beneficiary',
        amount: 2000000,
        component: SchemeComponent.adarshaGram,
        stateId: 'state_1',
        agencyId: 'agency_1',
        projectId: 'project_1',
        processedDate: now.subtract(const Duration(days: 4)),
        processingDays: 1,
        isDelayed: false,
        createdBy: 'project_manager',
        createdAt: now.subtract(const Duration(days: 5)),
        updatedAt: now.subtract(const Duration(days: 4)),
      ),
      FundTransaction(
        id: 'tx_8',
        pfmsId: 'PFMS2024008',
        transactionDate: now.subtract(const Duration(days: 18)),
        stage: FundFlowStage.centreAllocation,
        status: TransactionStatus.completed,
        fromEntity: 'Ministry of Social Justice',
        fromEntityId: 'centre_1',
        fromEntityType: 'centre',
        toEntity: 'Tamil Nadu',
        toEntityId: 'state_5',
        toEntityType: 'state',
        amount: 85000000,
        component: SchemeComponent.gia,
        stateId: 'state_5',
        processedDate: now.subtract(const Duration(days: 16)),
        processingDays: 2,
        isDelayed: false,
        createdBy: 'system',
        createdAt: now.subtract(const Duration(days: 18)),
        updatedAt: now.subtract(const Duration(days: 16)),
      ),
    ];
  }

  // Mock bottleneck alerts
  static List<BottleneckAlert> getMockBottlenecks() {
    return [
      BottleneckAlert(
        id: 'alert_1',
        stage: 'State to Agency Transfer',
        description: 'Karnataka state showing delays in agency fund disbursement',
        affectedTransactions: 5,
        severity: BottleneckSeverity.high,
        detectedAt: DateTime.now().subtract(const Duration(days: 2)),
      ),
      BottleneckAlert(
        id: 'alert_2',
        stage: 'Utilization Certificate Submission',
        description: 'Multiple agencies pending UC submissions beyond 30-day deadline',
        affectedTransactions: 12,
        severity: BottleneckSeverity.critical,
        detectedAt: DateTime.now().subtract(const Duration(days: 1)),
      ),
      BottleneckAlert(
        id: 'alert_3',
        stage: 'Centre to State Allocation',
        description: 'Pending approvals for Q4 fund allocation to 3 states',
        affectedTransactions: 8,
        severity: BottleneckSeverity.medium,
        detectedAt: DateTime.now().subtract(const Duration(hours: 12)),
      ),
    ];
  }

  // Mock drill-down context
  static DrillDownContext getMockDrillDownContext(String entityId, String entityName) {
    return DrillDownContext(
      entityId: entityId,
      entityName: entityName,
      entityType: 'state',
      metrics: EntityMetrics(
        totalAllocated: 50000000,
        totalUtilized: 43750000,
        balance: 6250000,
        utilizationRate: 87.5,
        transactionCount: 15,
        avgTransferDays: 3.2,
      ),
      flowSummary: [
        FlowSummary(
          stage: FundFlowStage.centreAllocation,
          amount: 50000000,
          transactionCount: 3,
        ),
        FlowSummary(
          stage: FundFlowStage.stateTransfer,
          amount: 43750000,
          transactionCount: 8,
        ),
        FlowSummary(
          stage: FundFlowStage.agencyDisbursement,
          amount: 35000000,
          transactionCount: 4,
        ),
      ],
      transactions: getMockTransactions().take(5).toList(),
      timelineEvents: [
        TimelineEvent(
          title: 'Initial Fund Allocation',
          description: 'Centre allocated ₹50Cr for FY 2024-25',
          timestamp: DateTime.now().subtract(const Duration(days: 30)),
          icon: Icons.account_balance,
          color: Colors.blue,
        ),
        TimelineEvent(
          title: 'State Approval Received',
          description: 'State government approved fund utilization plan',
          timestamp: DateTime.now().subtract(const Duration(days: 25)),
          icon: Icons.check_circle,
          color: Colors.green,
        ),
        TimelineEvent(
          title: 'Agency Transfers Initiated',
          description: 'Funds transferred to 5 implementing agencies',
          timestamp: DateTime.now().subtract(const Duration(days: 15)),
          icon: Icons.send,
          color: Colors.orange,
        ),
      ],
      documents: [
        DocumentInfo(
          id: 'doc_1',
          name: 'Q3 Utilization Certificate',
          type: 'pdf',
          size: 2458624,
          url: 'https://example.com/uc_q3.pdf',
        ),
        DocumentInfo(
          id: 'doc_2',
          name: 'Fund Allocation Report',
          type: 'excel',
          size: 1234567,
          url: 'https://example.com/allocation.xlsx',
        ),
      ],
      relatedEntities: [
        RelatedEntity(id: 'agency_1', name: 'Delhi Development Authority', type: 'agency'),
        RelatedEntity(id: 'agency_2', name: 'Mumbai Urban Development', type: 'agency'),
      ],
    );
  }

  // Mock comparison data
  static List<EntityComparison> getMockComparisons(String currentEntityId) {
    return [
      EntityComparison(
        entityId: 'state_1',
        entityName: 'Delhi',
        entityType: 'state',
        utilizationRate: 87.5,
        avgTransferDays: 2.8,
        complianceScore: 92.3,
        projectCompletionRate: 71.1,
        fundEfficiencyScore: 88.4,
      ),
      EntityComparison(
        entityId: 'state_2',
        entityName: 'Maharashtra',
        entityType: 'state',
        utilizationRate: 82.3,
        avgTransferDays: 3.5,
        complianceScore: 88.7,
        projectCompletionRate: 74.4,
        fundEfficiencyScore: 85.2,
      ),
      EntityComparison(
        entityId: 'state_3',
        entityName: 'Karnataka',
        entityType: 'state',
        utilizationRate: 79.8,
        avgTransferDays: 4.2,
        complianceScore: 85.2,
        projectCompletionRate: 73.2,
        fundEfficiencyScore: 82.7,
      ),
      EntityComparison(
        entityId: 'state_4',
        entityName: 'Uttar Pradesh',
        entityType: 'state',
        utilizationRate: 72.5,
        avgTransferDays: 5.8,
        complianceScore: 78.9,
        projectCompletionRate: 69.6,
        fundEfficiencyScore: 76.8,
      ),
      EntityComparison(
        entityId: 'state_5',
        entityName: 'Tamil Nadu',
        entityType: 'state',
        utilizationRate: 91.2,
        avgTransferDays: 2.1,
        complianceScore: 94.5,
        projectCompletionRate: 88.1,
        fundEfficiencyScore: 93.2,
      ),
    ];
  }
}