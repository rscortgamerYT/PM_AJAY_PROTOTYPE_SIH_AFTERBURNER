import '../../../core/models/project_milestone_model.dart';

class ProjectMilestoneMockData {
  static List<ProjectMilestone> generateMockMilestones(String projectId) {
    final now = DateTime.now();
    
    return [
      ProjectMilestone(
        id: 'MS-001-$projectId',
        projectId: projectId,
        milestoneNumber: 'M-1',
        name: 'Project Initiation & Planning',
        description: 'Complete project planning, site survey, and initial approvals',
        targetAmount: 2000000,
        claimedAmount: 2000000,
        approvedAmount: 2000000,
        status: MilestoneStatus.completed,
        claimStatus: MilestoneClaimStatus.approved,
        startDate: now.subtract(const Duration(days: 120)),
        targetDate: now.subtract(const Duration(days: 90)),
        completionDate: now.subtract(const Duration(days: 92)),
        claimSubmittedDate: now.subtract(const Duration(days: 90)),
        sequenceOrder: 1,
        dependencies: [],
        deliverables: {
          'project_plan': 'Approved',
          'site_survey': 'Completed',
          'environmental_clearance': 'Obtained',
        },
        metadata: {
          'approved_by': 'State Authority',
          'approval_date': now.subtract(const Duration(days: 85)).toIso8601String(),
        },
        createdAt: now.subtract(const Duration(days: 130)),
        updatedAt: now.subtract(const Duration(days: 85)),
      ),
      ProjectMilestone(
        id: 'MS-002-$projectId',
        projectId: projectId,
        milestoneNumber: 'M-2',
        name: 'Site Preparation & Foundation',
        description: 'Land clearing, excavation, and foundation work',
        targetAmount: 3500000,
        claimedAmount: 3500000,
        approvedAmount: 3500000,
        status: MilestoneStatus.completed,
        claimStatus: MilestoneClaimStatus.approved,
        startDate: now.subtract(const Duration(days: 90)),
        targetDate: now.subtract(const Duration(days: 60)),
        completionDate: now.subtract(const Duration(days: 62)),
        claimSubmittedDate: now.subtract(const Duration(days: 60)),
        sequenceOrder: 2,
        dependencies: ['MS-001-$projectId'],
        deliverables: {
          'excavation': 'Completed',
          'foundation': 'Laid and cured',
          'soil_testing': 'Passed',
        },
        metadata: {
          'approved_by': 'State Authority',
          'approval_date': now.subtract(const Duration(days: 55)).toIso8601String(),
        },
        createdAt: now.subtract(const Duration(days: 100)),
        updatedAt: now.subtract(const Duration(days: 55)),
      ),
      ProjectMilestone(
        id: 'MS-003-$projectId',
        projectId: projectId,
        milestoneNumber: 'M-3',
        name: 'Main Construction Phase',
        description: 'Primary structure construction and walls',
        targetAmount: 5000000,
        claimedAmount: 5000000,
        approvedAmount: 0,
        status: MilestoneStatus.completed,
        claimStatus: MilestoneClaimStatus.underReview,
        startDate: now.subtract(const Duration(days: 60)),
        targetDate: now.subtract(const Duration(days: 30)),
        completionDate: now.subtract(const Duration(days: 32)),
        claimSubmittedDate: now.subtract(const Duration(days: 5)),
        sequenceOrder: 3,
        dependencies: ['MS-002-$projectId'],
        deliverables: {
          'structural_work': 'Completed',
          'walls': 'Constructed',
          'quality_inspection': 'Passed',
        },
        metadata: {
          'submitted_to': 'State Authority',
          'submission_date': now.subtract(const Duration(days: 5)).toIso8601String(),
        },
        createdAt: now.subtract(const Duration(days: 70)),
        updatedAt: now.subtract(const Duration(days: 5)),
      ),
      ProjectMilestone(
        id: 'MS-004-$projectId',
        projectId: projectId,
        milestoneNumber: 'M-4',
        name: 'Infrastructure Installation',
        description: 'Plumbing, electrical, and mechanical installations',
        targetAmount: 4000000,
        claimedAmount: 0,
        approvedAmount: 0,
        status: MilestoneStatus.inProgress,
        claimStatus: MilestoneClaimStatus.notClaimed,
        startDate: now.subtract(const Duration(days: 30)),
        targetDate: now.add(const Duration(days: 15)),
        completionDate: null,
        claimSubmittedDate: null,
        sequenceOrder: 4,
        dependencies: ['MS-003-$projectId'],
        deliverables: {
          'plumbing': 'In Progress (60%)',
          'electrical': 'In Progress (45%)',
          'hvac': 'Not Started',
        },
        metadata: {
          'current_progress': '52%',
        },
        createdAt: now.subtract(const Duration(days: 40)),
        updatedAt: now.subtract(const Duration(days: 1)),
      ),
      ProjectMilestone(
        id: 'MS-005-$projectId',
        projectId: projectId,
        milestoneNumber: 'M-5',
        name: 'Finishing & Quality Assurance',
        description: 'Final finishing, painting, and quality checks',
        targetAmount: 3000000,
        claimedAmount: 0,
        approvedAmount: 0,
        status: MilestoneStatus.notStarted,
        claimStatus: MilestoneClaimStatus.notClaimed,
        startDate: null,
        targetDate: now.add(const Duration(days: 45)),
        completionDate: null,
        claimSubmittedDate: null,
        sequenceOrder: 5,
        dependencies: ['MS-004-$projectId'],
        deliverables: {
          'painting': 'Not Started',
          'flooring': 'Not Started',
          'final_inspection': 'Pending',
        },
        metadata: {},
        createdAt: now.subtract(const Duration(days: 40)),
        updatedAt: now.subtract(const Duration(days: 40)),
      ),
      ProjectMilestone(
        id: 'MS-006-$projectId',
        projectId: projectId,
        milestoneNumber: 'M-6',
        name: 'Handover & Documentation',
        description: 'Final handover with all documentation and warranties',
        targetAmount: 1500000,
        claimedAmount: 0,
        approvedAmount: 0,
        status: MilestoneStatus.notStarted,
        claimStatus: MilestoneClaimStatus.notClaimed,
        startDate: null,
        targetDate: now.add(const Duration(days: 60)),
        completionDate: null,
        claimSubmittedDate: null,
        sequenceOrder: 6,
        dependencies: ['MS-005-$projectId'],
        deliverables: {
          'documentation': 'Not Started',
          'warranties': 'Pending',
          'training': 'Not Scheduled',
        },
        metadata: {},
        createdAt: now.subtract(const Duration(days: 40)),
        updatedAt: now.subtract(const Duration(days: 40)),
      ),
    ];
  }

  static List<ProjectMilestone> getAllMockMilestones() {
    return [
      ...generateMockMilestones('1'),
      ...generateMockMilestones('2'),
      ...generateMockMilestones('3'),
    ];
  }

  static List<ProjectMilestone> getMilestonesForProject(String projectId) {
    return generateMockMilestones(projectId);
  }
}